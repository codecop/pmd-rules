<?xml version="1.0"?>
<ruleset name="Krimi" xmlns="http://pmd.sf.net/ruleset/1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd" xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">

    <description>Coding conventions of the whole KRIMI code base. This is deployed so all sub-projects can build and check.</description>

    <rule ref="rulesets/basic.xml/EmptyCatchBlock" />
    <rule ref="rulesets/design.xml/PreserveStackTrace" />
    <rule ref="rulesets/logging-java.xml/AvoidPrintStackTrace" />
    <rule ref="rulesets/strictexception.xml/AvoidCatchingNPE" />
    <rule ref="rulesets/strictexception.xml/AvoidCatchingThrowable" />
    <rule ref="rulesets/strictexception.xml/AvoidThrowingRawExceptionTypes" />
    <rule ref="rulesets/strictexception.xml/DoNotThrowExceptionInFinally" />

<!-- LIST of all rules with 0 or 1 violations in KrimiCE and KrimiSI - to be activated. -->

    <rule ref="rulesets/basic.xml/AvoidDecimalLiteralsInBigDecimalConstructor" />
    <rule ref="rulesets/basic.xml/AvoidMultipleUnaryOperators" />
    <rule ref="rulesets/basic.xml/AvoidThreadGroup" />
    <rule ref="rulesets/basic.xml/AvoidUsingHardCodedIP" />
    <rule ref="rulesets/basic.xml/BigIntegerInstantiation" />
    <rule ref="rulesets/basic.xml/ClassCastExceptionWithToArray" />
    <rule ref="rulesets/basic.xml/DoubleCheckedLocking" />
    <rule ref="rulesets/basic.xml/EmptyInitializer" />
    <rule ref="rulesets/basic.xml/EmptyStaticInitializer" />
    <rule ref="rulesets/basic.xml/EmptySwitchStatements" />
    <rule ref="rulesets/basic.xml/EmptySynchronizedBlock" />
    <rule ref="rulesets/basic.xml/EmptyTryBlock" />
    <rule ref="rulesets/basic.xml/EmptyWhileStmt" />
    <rule ref="rulesets/basic.xml/JumbledIncrementer" />
    <rule ref="rulesets/basic.xml/UnusedNullCheckInEquals" />
    <rule ref="rulesets/clone.xml/CloneMethodMustImplementCloneable" />
    <rule ref="rulesets/clone.xml/CloneThrowsCloneNotSupportedException" />
    <rule ref="rulesets/clone.xml/ProperCloneImplementation" />
    <rule ref="rulesets/controversial.xml/AvoidAccessibilityAlteration" />
    <rule ref="rulesets/controversial.xml/AvoidUsingNativeCode" />
    <rule ref="rulesets/controversial.xml/AvoidUsingVolatile" />
    <rule ref="rulesets/controversial.xml/DoNotCallGarbageCollectionExplicitly" />
    <rule ref="rulesets/controversial.xml/DontImportSun" />
    <rule ref="rulesets/controversial.xml/SuspiciousOctalEscape" />
    <rule ref="rulesets/design.xml/AvoidProtectedFieldInFinalClass" />
    <rule ref="rulesets/design.xml/BadComparison" />
    <rule ref="rulesets/design.xml/DefaultLabelNotLastInSwitchStmt" />
    <rule ref="rulesets/design.xml/EqualsNull" />
    <rule ref="rulesets/design.xml/IdempotentOperations" />
    <rule ref="rulesets/design.xml/InstantiationToGetClass" />
    <rule ref="rulesets/design.xml/MissingBreakInSwitch" />
    <rule ref="rulesets/design.xml/NonCaseLabelInSwitchStatement" />
    <rule ref="rulesets/design.xml/OptimizableToArrayCall" />
    <rule ref="rulesets/design.xml/UseNotifyAllInsteadOfNotify" />
    <rule ref="rulesets/finalizers.xml/AvoidCallingFinalize" />
    <rule ref="rulesets/finalizers.xml/EmptyFinalizer" />
    <rule ref="rulesets/finalizers.xml/FinalizeDoesNotCallSuperFinalize" />
    <rule ref="rulesets/finalizers.xml/FinalizeOnlyCallsSuperFinalize" />
    <rule ref="rulesets/finalizers.xml/FinalizeOverloaded" />
    <rule ref="rulesets/finalizers.xml/FinalizeShouldBeProtected" />
    <rule ref="rulesets/imports.xml/ImportFromSamePackage" />
    <rule ref="rulesets/imports.xml/TooManyStaticImports" />
    <rule ref="rulesets/j2ee.xml/LocalHomeNamingConvention" />
    <rule ref="rulesets/j2ee.xml/LocalInterfaceSessionNamingConvention" />
    <rule ref="rulesets/j2ee.xml/MDBAndSessionBeanNamingConvention" />
    <rule ref="rulesets/j2ee.xml/RemoteInterfaceNamingConvention" />
    <rule ref="rulesets/j2ee.xml/RemoteSessionInterfaceNamingConvention" />
    <rule ref="rulesets/j2ee.xml/StaticEJBFieldShouldBeFinal" />
    <rule ref="rulesets/junit.xml/JUnitSpelling" />
    <rule ref="rulesets/junit.xml/JUnitStaticSuite" />
    <rule ref="rulesets/junit.xml/UseAssertEqualsInsteadOfAssertTrue" />
    <rule ref="rulesets/junit.xml/UseAssertNullInsteadOfAssertTrue" />
    <rule ref="rulesets/logging-java.xml/MoreThanOneLogger" />
    <rule ref="rulesets/migrating.xml/AvoidAssertAsIdentifier" />
    <rule ref="rulesets/migrating.xml/AvoidEnumAsIdentifier" />
    <rule ref="rulesets/migrating.xml/ByteInstantiation" />
    <rule ref="rulesets/migrating.xml/JUnitUseExpected" />
    <rule ref="rulesets/migrating.xml/ReplaceEnumerationWithIterator" />
    <rule ref="rulesets/migrating.xml/ShortInstantiation" />
    <rule ref="rulesets/naming.xml/AvoidDollarSigns" />
    <rule ref="rulesets/naming.xml/MethodWithSameNameAsEnclosingClass" />
    <rule ref="rulesets/naming.xml/MisleadingVariableName" />
    <rule ref="rulesets/naming.xml/NoPackage" />
    <rule ref="rulesets/naming.xml/SuspiciousEqualsMethodName" />
    <rule ref="rulesets/naming.xml/SuspiciousHashcodeMethodName" />
    <rule ref="rulesets/optimizations.xml/UseArraysAsList" />
    <rule ref="rulesets/strictexception.xml/AvoidCatchingThrowable" />
    <rule ref="rulesets/strictexception.xml/AvoidThrowingNewInstanceOfSameException" />
    <rule ref="rulesets/strictexception.xml/DoNotExtendJavaLangError" />
    <rule ref="rulesets/strings.xml/StringBufferInstantiationWithChar" />
    <rule ref="rulesets/strings.xml/UnnecessaryCaseChange" />
    <rule ref="rulesets/strings.xml/UseStringBufferLength" />
    <rule ref="rulesets/typeresolution.xml/CloneMethodMustImplementCloneable" />

</ruleset>
